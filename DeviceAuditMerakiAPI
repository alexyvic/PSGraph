#This is used to query Client devices in your Meraki tenant with API key

#Author Alex You

# V2.0 Fix the paging
# V1.0 Working but paging limited to 1000

$apiKey = "YOURAPIKEY"
$headers = @{
    "X-Cisco-Meraki-API-Key" = $apiKey
}

$orgListUrl = "https://api.meraki.com/api/v1/organizations/"
$orgList = Invoke-RestMethod -Uri $orgListUrl -Headers $headers -Method Get
# Initialize the array to hold all devices
$Totaldevices = @()

# Query_day no more than 31 days
$query_days = 31
$query_seconds = $query_days * 86400

# Loop through each organization in the orgList
foreach ($org in $orgList) {
    $orgId = $org.id

    $networklistUrl = "https://api.meraki.com/api/v1/organizations/$orgId/networks"
    $networklist = Invoke-RestMethod -Uri $networklistUrl -Headers $headers -Method Get

    # Loop through each network in the networklist
    foreach ($network in $networklist) {
        $networkId = $network.id

        # Initialize variables for paging
        $perPage = 1000
        $startingAfter = $null

        # Loop for paging
        do {
            $devicelistUrl = "https://api.meraki.com/api/v1/networks/$networkId/clients?perPage=$perPage&timespan=$query_seconds"
            if ($startingAfter) {
                $devicelistUrl += "&startingAfter=$startingAfter"
            }

            $devicelist = Invoke-RestMethod -Uri $devicelistUrl -Headers $headers -Method Get
            Write-Host "For $($network.name) $($networkId) had $($devicelist.count) devices in last $($query_days) days" -ForegroundColor Yellow -BackgroundColor Black
            if ($devicelist.count -gt $perPage) {
                Write-Host "For $($network.name) $($networkId) exceed $perPage devices in last $($query_days) days" -ForegroundColor Red -BackgroundColor Black
            }

            # Add location information to each device in the list
            $devicelist | ForEach-Object {
                $_ | Add-Member -MemberType NoteProperty -Name "Location" -Value $network.name
            }

            # Append the devices to the Totaldevices array
            $Totaldevices += $devicelist

            # Set the startingAfter parameter for the next page
            if ($devicelist[-1]) {
                $startingAfter = $devicelist[-1].id
            } else {
                $startingAfter = $null
            }

        } while ($startingAfter)
    }
}

$Totaldevices
